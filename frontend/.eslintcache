[{"/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/index.js":"1","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/App.js":"2","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Register.js":"3","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Login.js":"4","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Home.js":"5","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Table.js":"6","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Select.js":"7","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Quiz.js":"8","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Results.js":"9","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Score.js":"10","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Timer.js":"11","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Confetti.js":"12","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/ScrollToTop.js":"13"},{"size":168,"mtime":1610617095394,"results":"14","hashOfConfig":"15"},{"size":1148,"mtime":1611151231718,"results":"16","hashOfConfig":"15"},{"size":2046,"mtime":1611152495117,"results":"17","hashOfConfig":"15"},{"size":1780,"mtime":1611152495117,"results":"18","hashOfConfig":"15"},{"size":639,"mtime":1611151751915,"results":"19","hashOfConfig":"15"},{"size":4668,"mtime":1611152495124,"results":"20","hashOfConfig":"15"},{"size":5303,"mtime":1611071660679,"results":"21","hashOfConfig":"15"},{"size":5106,"mtime":1611152828287,"results":"22","hashOfConfig":"15"},{"size":650,"mtime":1611152495118,"results":"23","hashOfConfig":"15"},{"size":1628,"mtime":1611071056864,"results":"24","hashOfConfig":"15"},{"size":1913,"mtime":1611071895321,"results":"25","hashOfConfig":"15"},{"size":727,"mtime":1611152422915,"results":"26","hashOfConfig":"15"},{"size":282,"mtime":1611151302467,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"8j84bk",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/index.js",[],["60","61"],"/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/App.js",[],"/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Register.js",[],"/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Login.js",[],"/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Home.js",[],"/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Table.js",["62"],"import React, { Component, useEffect, useState } from \"react\";\nimport axios from 'axios'\nimport \"./table.css\";\n<<<<<<< HEAD\nimport Confetti from \"./Confetti\";\n\nclass Table extends Component {\n  state = {\n    scores: [\n      { name: \"John\", score: 8, time: 120 },\n      { name: \"Rodger\", score: 10, time: 140 },\n      { name: \"Lola\", score: 5, time: 180 },\n      { name: \"Mike\", score: 5, time: 140 },\n      { name: \"Chris\", score: 10, time: 135 },\n    ],\n  };\n=======\nimport makeConfetti from \"./Confetti\";\nimport results from \"./Results\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Table = () => {\n  const [scores, setScores] = useState([])\n  const [curScore, setcurScore] = useState({})\n  const [name, setName] = useState(\"\")\n>>>>>>> 71fdfca9c39e1619d27b81bf2c72a6e1848cdf7f\n\n  const fetchData = async () => {\n    const response = await axios.get('/table')\n    console.log(response.data.leaderBoard)\n    setScores(response.data.leaderBoard)\n\n    console.log(response.data.curScore)\n    setcurScore(response.data.curScore)\n\n    setName(response.data.curScore.userid.name)\n  \n  }\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n  const history = useHistory()\n  const handleClick = () => {\n    history.push('/select');\n  }\n  console.log(scores)\n  const componentDid = () => {\n    let data = scores;\n    console.log(data)\n    // let sorted = data.sort((a, b) => {\n    //   return b.score - a.score || a.time - b.time;\n    // });\n    // setScores({ scores: sorted });\n  \n    return (\n      <div className=\"mainTable\">\n        <h1 className=\"scoreboard\">Scoreboard</h1>\n<<<<<<< HEAD\n        <Confetti />\n        <h3>Congratulations user, you got 5/10 correct in 1m 35s. </h3>\n        <h3>Check your how you did on our scoreboard below</h3>\n        <div className=\"titles\">\n          <h3 className=\"userName\">Username</h3>\n          <h3 className=\"score\">Score</h3>\n          <h3 className=\"time\">Time</h3>\n        </div>\n        {scores.map((person) => {\n          return (\n            <div className=\"table\">\n              <div className=\"name\">\n                <p>{person.name}</p>\n=======\n        <p>Congratulations {name}, you got {curScore.score}/10 in {curScore.time}</p>\n          <div className=\"titles\">\n            <h3 className=\"userName\">Username</h3>\n            <h3 className=\"score\">Score</h3>\n            <h3 className=\"time\">Time</h3>\n          </div>\n          {scores.map((scores) => {\n            return (\n              <div className=\"table\">\n                <div className=\"name\">\n                  <p>{scores.userid.name}</p>\n                </div>\n                <p className=\"userScore\">{scores.score}</p>\n                <p className=\"userTime\">{scores.time}</p>\n>>>>>>> 71fdfca9c39e1619d27b81bf2c72a6e1848cdf7f\n              </div>\n            );\n          })}\n          <br />  \n        \n        <button onClick={handleClick} >Try Again</button>      \n        <button className=\"logout\">Logout</button>\n     </div>\n    );\n  }\n  return(\n    <h1>{componentDid()}</h1>\n  )\n}\n\n<<<<<<< HEAD\nexport default Table;\n=======\nexport default Table\n\n\n// class Table extends Component {\n//   state = {\n//     scores: [\n//       { name: \"John\", score: 8, time: 120 },\n//       { name: \"Rodger\", score: 10, time: 140 },\n//       { name: \"Lola\", score: 5, time: 180 },\n//       { name: \"Mike\", score: 5, time: 140 },\n//       { name: \"Chris\", score: 10, time: 135 },\n//       { name: \"Chris\", score: 10, time: 135 },\n//       { name: \"Chris\", score: 10, time: 135 },\n//     ],\n//   };\n\n//   handleClick() {\n//     this.props.history.push('/select');\n//   }\n   \n\n// componentDidMount() {\n//   let data = this.state.scores;\n//   let sorted = data.sort((a, b) => {\n//     return b.score - a.score || a.time - b.time;\n//   });\n\n//     this.setState({ scores: sorted });\n//   }\n//   render() {\n//     const { scores } = this.state;\n//     return (\n//       <div className=\"main\">\n//         <h1>Scoreboard</h1>\n//         <div className=\"titles\">\n//           <h3>Username</h3>\n//           <h3>Score</h3>\n//           <h3>Time</h3>\n//         </div>\n//         {scores.map((person) => {\n//           return (\n//             <div className=\"table\">\n//               <p>{person.name}</p>\n//               <p>{person.score}</p>\n//               <p>{person.time}</p>\n//             </div>\n//           );\n//         })}\n//         <br />\n\n//         <button onClick={() => this.handleClick()} >Try Again</button>\n\n//         <button>Logout</button>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Table;\n\n// <p>\n//                 {person.name} - {person.score} - {person.time}\n//               </p>\n>>>>>>> 71fdfca9c39e1619d27b81bf2c72a6e1848cdf7f\n","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Select.js",["63","64","65","66","67","68","69","70","71","72"],"//import e from \"cors\";\nimport { useRef, useState } from \"react\";\nimport \"./dropDown.css\";\nimport { useHistory } from \"react-router-dom\";\n\n//create category state\nlet diff;\nlet cate;\n\nconst Select = () => {\n  const [category, setCategory] = useState({\n    category: \"\",\n  });\n\n  const setData = (e) => {\n    setCategory({\n      ...category,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const [difficulty, setDifficulty] = useState({\n    difficulty: \"\",\n  });\n\n  const setDif = (e) => {\n    setDifficulty({\n      ...difficulty,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const history = useHistory();\n  const handleClick = () => {\n    console.log(diff);\n    console.log(cate);\n    history.push(\"/quiz\");\n  };\n  diff = difficulty.difficulty;\n  cate = category.category;\n\n  console.log(category.category);\n  console.log(difficulty.difficulty);\n\n  const dropdownRef = useRef(null);\n  const [isActive, setIsActive] = useState(false);\n  const onClick = () => setIsActive(!isActive);\n\n  // const dropdownRef = useRef(null);\n  const [isDifActive, setIsDifActive] = useState(false);\n  const onClickDif = () => setIsDifActive(!isDifActive);\n  let finalCat = \"\";\n  let finalDif = \"\";\n\n  if (category.category == 9) {\n    finalCat = \"General Knowledge\";\n  } else if (category.category == 18) {\n    finalCat = \"Science: Computers\";\n  } else if (category.category == 15) {\n    finalCat = \"Entertainment: Video Games\";\n  } else if (category.category == 22) {\n    finalCat = \"Geography\";\n  } else if (category.category == 23) {\n    finalCat = \"History\";\n  } else if (category.category == 25) {\n    finalCat = \"Art\";\n  } else if (category.category == 28) {\n    finalCat = \"Vehicles\";\n  } else if (category.category == 27) {\n    finalCat = \"Animals\";\n  } else if (category.category == 21) {\n    finalCat = \"Sports\";\n  } else if (category.category == 20) {\n    finalCat = \"Mythology\";\n  }\n\n  console.log(category.category);\n\n  if (difficulty.difficulty === \"easy\") {\n    finalDif = \"Easy\";\n  } else if (difficulty.difficulty === \"medium\") {\n    finalDif = \"Medium\";\n  } else if (difficulty.difficulty === \"hard\") {\n    finalDif = \"Hard\";\n  }\n\n  return (\n    <div className=\"main\">\n      <h2>Welcome user</h2>\n\n      <div className=\"menu-container\">\n        <button onClick={onClick} className=\"menu-trigger\">\n          <span>Select Category</span>\n        </button>\n        <nav\n          ref={dropdownRef}\n          className={`menu ${isActive ? \"active\" : \"inactive\"}`}\n        >\n          <ul>\n            <li>\n              <button name=\"category\" value={9} onClick={setData}>\n                General Knowledge\n              </button>\n            </li>\n            <li>\n              <button name=\"category\" value={18} onClick={setData}>\n                Science: Computers\n              </button>\n            </li>\n            <li>\n              <button name=\"category\" value={15} onClick={setData}>\n                Entertainment: Video Games\n              </button>\n            </li>\n            <li>\n              <button name=\"category\" value={22} onClick={setData}>\n                Geography\n              </button>\n            </li>\n            <li>\n              <button name=\"category\" value={23} onClick={setData}>\n                History\n              </button>\n            </li>\n            <li>\n              <button name=\"category\" value={25} onClick={setData}>\n                Art\n              </button>\n            </li>\n            <li>\n              <button name=\"category\" value={28} onClick={setData}>\n                Vehicles\n              </button>\n            </li>\n            <li>\n              <button name=\"category\" value={27} onClick={setData}>\n                Animals\n              </button>\n            </li>\n            <li>\n              <button name=\"category\" value={21} onClick={setData}>\n                Sports\n              </button>\n            </li>\n            <li>\n              <button name=\"category\" value={20} onClick={setData}>\n                Mythology\n              </button>\n            </li>\n          </ul>\n        </nav>\n      </div>\n      <div className=\"menu-container2\">\n        <button onClick={onClickDif} className=\"menu-trigger2\">\n          <span>Select Difficulty</span>\n        </button>\n        <nav\n          ref={dropdownRef}\n          className={`menu2 ${isDifActive ? \"active\" : \"inactive\"}`}\n        >\n          <ul>\n            <li>\n              <button name=\"difficulty\" value={\"easy\"} onClick={setDif}>\n                Easy\n              </button>\n            </li>\n            <li>\n              <button name=\"difficulty\" value={\"medium\"} onClick={setDif}>\n                Medium\n              </button>\n            </li>\n            <li>\n              <button name=\"difficulty\" value={\"hard\"} onClick={setDif}>\n                Hard\n              </button>\n            </li>\n          </ul>\n        </nav>\n      </div>\n      <div className=\"options\">\n        <h2>Quiz Selection</h2>\n        <p>You have selected</p>\n        <p className=\"cat\">{finalCat}</p>\n        <p>Difficulty Level</p>\n        <p className=\"dif\">{finalDif}</p>\n\n        <button onClick={handleClick} type=\"button\" className=\"quizBut\">\n          Start Quiz\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport { diff, cate };\nexport default Select;\n","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Quiz.js",["73"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Timer from \"./Timer\";\nimport \"./quiz.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { start, urTime } from \"./Timer\";\nimport { diff, cate } from \"./Select\";\n<<<<<<< HEAD\n=======\nimport { confettiClick } from \"./Confetti\";\n>>>>>>> 71fdfca9c39e1619d27b81bf2c72a6e1848cdf7f\n\nconst Quiz = () => {\n  const [showQ, setQ] = useState(false);\n  const handleClick = () => setQ(!showQ);\n\n  const [results, setResults] = useState([]);\n  const [backendResponse, setBackendResponse] = useState(\"\");\n  let score = [];\n  console.log(diff, cate);\n\n  useEffect(() => {\n    fetchApi();\n  }, []);\n\n  const fetchApi = async () => {\n    const res = await axios.get(\n      `https://opentdb.com/api.php?amount=10&category=${cate}&difficulty=${diff}&type=multiple`\n    );\n    console.log(res.data.results);\n    setResults(res.data.results);\n  };\n\n  const formHandler = async (event) => {\n    console.log(event.target.value);\n    if (event.target.value === \"correct\") {\n      score[event.target.name] = \"correct\";\n    } else if (event.target.value !== \"correct\") {\n      score[event.target.name] = \"incorrect\";\n    }\n    console.log(score);\n    console.log(urTime);\n  };\n  const history = useHistory();\n\n  const sendBackend = async (event) => {\n    console.log(urTime);\n    const body = {\n      score: score,\n      time: urTime,\n    };\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    console.log(score);\n    console.log(event.value);\n\n    if (score.length == 10){   \n      history.push('/table');\n      const response = await axios.post(\"/results\", body, config);\n      setBackendResponse(response.data.message);\n      console.log(response);\n    } else {\n      console.log(\"not all answered\");\n    }\n  };\n  let count = -1;\n\n  const allQuestions = results.map((results) => {\n    count = count + 1;\n    const cor = results.correct_answer;\n    const incor1 = results.incorrect_answers[0];\n    const incor2 = results.incorrect_answers[1];\n    const incor3 = results.incorrect_answers[2];\n    let num = Math.floor(Math.random() * 4) + 1;\n    console.log(score);\n\n    if (num === 1) {\n      return (\n        <div>\n          <h3>Question: {results.question}</h3>\n          <input type=\"radio\" value=\"correct\" name={count} />\n          <label for=\"answer1\">answer 1: {cor} </label> <br />\n          <input type=\"radio\" value=\"answer2\" name={count} />\n          <label for=\"answer2\">answer 2: {incor1} </label> <br />\n          <input type=\"radio\" value=\"answer3\" name={count} />\n          <label for=\"answer3\">answer 3: {incor2} </label> <br />\n          <input type=\"radio\" value=\"answer4\" name={count} />\n          <label for=\"answer4\">answer 4: {incor3} </label> <br />\n        </div>\n      );\n    } else if (num === 2) {\n      return (\n        <div>\n          <h3>Question: {results.question}</h3>\n          <input type=\"radio\" value=\"answer1\" name={count} />\n          <label for=\"answer1\">answer 1: {incor1} </label> <br />\n          <input type=\"radio\" value=\"correct\" name={count} />\n          <label for=\"answer2\">answer 2: {cor} </label> <br />\n          <input type=\"radio\" value=\"answer3\" name={count} />\n          <label for=\"answer3\">answer 3: {incor2} </label> <br />\n          <input type=\"radio\" value=\"answer4\" name={count} />\n          <label for=\"answer4\">answer 4: {incor3} </label> <br />\n        </div>\n      );\n    } else if (num === 3) {\n      return (\n        <div>\n          <h3>Question: {results.question}</h3>\n          <input type=\"radio\" value=\"answer1\" name={count} />\n          <label for=\"answer1\">answer 1: {incor1} </label> <br />\n          <input type=\"radio\" value=\"answer2\" name={count} />\n          <label for=\"answer2\">answer 2: {incor2} </label> <br />\n          <input type=\"radio\" value=\"correct\" name={count} />\n          <label for=\"answer3\">answer 3: {cor} </label> <br />\n          <input type=\"radio\" value=\"answer4\" name={count} />\n          <label for=\"answer4\">answer 4: {incor3} </label> <br />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <h3>Question: {results.question}</h3>\n          <input type=\"radio\" value=\"answer1\" name={count} />\n          <label for=\"answer1\">answer 1: {incor1} </label> <br />\n          <input type=\"radio\" value=\"answer2\" name={count} />\n          <label for=\"answer2\">answer 2: {incor2} </label> <br />\n          <input type=\"radio\" value=\"answer3\" name={count} />\n          <label for=\"answer3\">answer 3: {incor3} </label> <br />\n          <input type=\"radio\" value=\"correct\" name={count} />\n          <label for=\"answer4\">answer 4: {cor} </label> <br />\n        </div>\n      );\n    }\n  });\n  return (\n    <div className=\"allQ\">\n      <h1>Questions</h1>\n\n      <Timer value={start} handleClick={handleClick} />\n\n      <div className={`${showQ ? \"questionShow\" : \"questionHide\"}`}>\n        <form onChange={formHandler}>{allQuestions}</form>\n\n        <form onSubmit={sendBackend}>\n          <button onClick={handleClick2} type=\"submit\" className=\"sub\">\n            Submit\n          </button>\n        </form>\n        {backendResponse}\n      </div>\n    </div>\n  );\n};\n\nexport default Quiz;\n","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Results.js",[],"/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Score.js",[],"/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Timer.js",["74"],"import { Component } from \"react\";\nimport \"./quiz.css\";\n\nlet urTime;\n\nconst React = require(\"react\");\nconst ms = require(\"pretty-ms\");\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: 0,\n      isOn: false,\n      start: 0,\n    };\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n  }\n  startTimer() {\n    this.setState({\n      isOn: true,\n      time: this.state.time,\n      start: Date.now() - this.state.time,\n    });\n    this.props.handleClick();\n    this.timer = setInterval(\n      () =>\n        this.setState({\n          time: Date.now() - this.state.start,\n        }),\n      1\n    );\n  }\n  stopTimer() {\n    this.setState({ isOn: false });\n    clearInterval(this.timer);\n  }\n  resetTimer() {\n    this.setState({ time: 0, isOn: false });\n    this.props.handleClick();\n  }\n  render() {\n    let start =\n      this.state.time == 0 ? (\n        <button onClick={this.startTimer} className=\"start\">\n          Start\n        </button>\n      ) : null;\n    // let stop =\n    //   this.state.time === 0 || !this.state.isOn ? null : (\n    //     <button onClick={this.stopTimer}>stop</button>\n    //   );\n    // let resume =\n    //   this.state.time === 0 || this.state.isOn ? null : (\n    //     <button onClick={this.startTimer}>resume</button>\n    //   );\n    // let reset =\n    //   this.state.time === 0 || this.state.isOn ? null : (\n    //     <button onClick={this.resetTimer}>reset</button>\n    //   );\n    urTime = ms(this.state.time);\n\n    return (\n      <div>\n        <h3>Timer: {ms(this.state.time)}</h3>\n        {start}\n        {/* {resume}\n        {stop}\n        {reset} */}\n        {/* <p>Your time {ms(this.state.time)}</p> */}\n      </div>\n    );\n  }\n}\n\nexport { urTime };\nexport default Timer;\n\nexport class start extends Component {\n  start;\n}\n",["75","76"],"/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Confetti.js",["77","78","79","80"],"/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/ScrollToTop.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":null,"fatal":true,"severity":2,"message":"85","line":4,"column":2},{"ruleId":"86","severity":1,"message":"87","line":55,"column":25,"nodeType":"88","messageId":"89","endLine":55,"endColumn":27},{"ruleId":"86","severity":1,"message":"87","line":57,"column":32,"nodeType":"88","messageId":"89","endLine":57,"endColumn":34},{"ruleId":"86","severity":1,"message":"87","line":59,"column":32,"nodeType":"88","messageId":"89","endLine":59,"endColumn":34},{"ruleId":"86","severity":1,"message":"87","line":61,"column":32,"nodeType":"88","messageId":"89","endLine":61,"endColumn":34},{"ruleId":"86","severity":1,"message":"87","line":63,"column":32,"nodeType":"88","messageId":"89","endLine":63,"endColumn":34},{"ruleId":"86","severity":1,"message":"87","line":65,"column":32,"nodeType":"88","messageId":"89","endLine":65,"endColumn":34},{"ruleId":"86","severity":1,"message":"87","line":67,"column":32,"nodeType":"88","messageId":"89","endLine":67,"endColumn":34},{"ruleId":"86","severity":1,"message":"87","line":69,"column":32,"nodeType":"88","messageId":"89","endLine":69,"endColumn":34},{"ruleId":"86","severity":1,"message":"87","line":71,"column":32,"nodeType":"88","messageId":"89","endLine":71,"endColumn":34},{"ruleId":"86","severity":1,"message":"87","line":73,"column":32,"nodeType":"88","messageId":"89","endLine":73,"endColumn":34},{"ruleId":null,"fatal":true,"severity":2,"message":"90","line":8,"column":2},{"ruleId":"86","severity":1,"message":"87","line":45,"column":23,"nodeType":"88","messageId":"89","endLine":45,"endColumn":25},{"ruleId":"81","replacedBy":"91"},{"ruleId":"83","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":5,"column":1,"nodeType":"95","endLine":29,"endColumn":3},{"ruleId":"96","severity":1,"message":"97","line":6,"column":10,"nodeType":"98","messageId":"99","endLine":6,"endColumn":16},{"ruleId":"96","severity":1,"message":"100","line":7,"column":10,"nodeType":"98","messageId":"99","endLine":7,"endColumn":15},{"ruleId":"96","severity":1,"message":"101","line":8,"column":16,"nodeType":"98","messageId":"99","endLine":8,"endColumn":23},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 2 | \u001b[39m\u001b[36mimport\u001b[39m axios from \u001b[32m'axios'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 3 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[32m\"./table.css\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 4 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 5 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mConfetti\u001b[39m from \u001b[32m\"./Confetti\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 | \u001b[39m\u001b[36mclass\u001b[39m \u001b[33mTable\u001b[39m \u001b[36mextends\u001b[39m \u001b[33mComponent\u001b[39m {\u001b[0m","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  6 | \u001b[39m\u001b[36mimport\u001b[39m { start\u001b[33m,\u001b[39m urTime } from \u001b[32m\"./Timer\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  7 | \u001b[39m\u001b[36mimport\u001b[39m { diff\u001b[33m,\u001b[39m cate } from \u001b[32m\"./Select\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m\u001b[33m===\u001b[39m\u001b[33m===\u001b[39m\u001b[33m=\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m\u001b[36mimport\u001b[39m { confettiClick } from \u001b[32m\"./Confetti\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m\u001b[33m>>>\u001b[39m\u001b[33m>>>\u001b[39m\u001b[33m>\u001b[39m \u001b[35m71\u001b[39mfdfca9c39e1619d27b81bf2c72a6e1848cdf7f\u001b[0m",["102"],["103"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'height' is assigned a value but never used.","Identifier","unusedVar","'width' is assigned a value but never used.","'setShow' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]