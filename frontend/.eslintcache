[{"/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/index.js":"1","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/App.js":"2","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/reportWebVitals.js":"3","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Register.js":"4","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Home.js":"5","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Users.js":"6","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Select.js":"7","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/LoginReg.js":"8"},{"size":500,"mtime":1610534912135,"results":"9","hashOfConfig":"10"},{"size":606,"mtime":1610537332783,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610534912136,"results":"12","hashOfConfig":"10"},{"size":1591,"mtime":1610534912134,"results":"13","hashOfConfig":"10"},{"size":203,"mtime":1610554808885,"results":"14","hashOfConfig":"10"},{"size":443,"mtime":1610534912134,"results":"15","hashOfConfig":"10"},{"size":3469,"mtime":1610553505649,"results":"16","hashOfConfig":"10"},{"size":1628,"mtime":1610554808885,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"8j84bk",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/index.js",[],["37","38"],"/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/App.js",[],"/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/reportWebVitals.js",[],"/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Register.js",[],"/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Home.js",[],"/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Users.js",["39","40"],"import axios from 'axios'\nimport React, {useEffect} from 'react'\n\nconst Users = () => {\n    const [users, setUsers] = []\n\n    const fetchData = async () => {\n        const response = await axios.get('/api/users')\n        console.log(response.data)\n\n        setUsers(response.data.users)\n    }\n\n    useEffect(() => {\n        fetchData()\n    }, [])\n\n    return (\n        <div>\n            All Users\n\n        </div>\n    )\n}\n\nexport default Users\n","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/Select.js",["41"],"//import e from \"cors\";\nimport { useRef, useState, setState } from \"react\";\nimport \"./dropDown.css\";\n\n//create category state\n\nconst Select = () => {\n  const [category, setCategory] = useState({\n    category: \"\",\n  });\n\n  const setData = (e) => {\n    setCategory({\n      ...category,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const [difficulty, setDifficulty] = useState({\n    difficulty: \"\",\n  });\n\n  const setDif = (e) => {\n    setDifficulty({\n      ...difficulty,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  console.log(category.category);\n  console.log(difficulty.difficulty);\n\n  const dropdownRef = useRef(null);\n  const [isActive, setIsActive] = useState(false);\n  const onClick = () => setIsActive(!isActive);\n\n  return (\n    <div>\n      <div className=\"menu-container\">\n        <button onClick={onClick} className=\"menu-trigger\">\n          <span>Category</span>\n        </button>\n        <nav\n          ref={dropdownRef}\n          className={`menu ${isActive ? \"active\" : \"inactive\"}`}\n        >\n          <ul>\n            <li>\n              <button name=\"category\" value={9} onClick={setData}>\n                General Knowledge\n              </button>\n            </li>\n            <li>\n              <button name=\"category\" value={18} onClick={setData}>\n                Science: Computers\n              </button>\n            </li>\n            <li>\n              <button name=\"category\" value={15} onClick={setData}>\n                Entertainment: Video Games\n              </button>\n            </li>\n            <li>\n              <button name=\"category\" value={22} onClick={setData}>\n                Geography\n              </button>\n            </li>\n            <li>\n              <button name=\"category\" value={23} onClick={setData}>\n                History\n              </button>\n            </li>\n            <li>\n              <button name=\"category\" value={25} onClick={setData}>\n                Art\n              </button>\n            </li>\n            <li>\n              <button name=\"category\" value={28} onClick={setData}>\n                Vehicles\n              </button>\n            </li>\n            <li>\n              <button name=\"category\" value={27} onClick={setData}>\n                Animals\n              </button>\n            </li>\n            <li>\n              <button name=\"category\" value={21} onClick={setData}>\n                Sports\n              </button>\n            </li>\n            <li>\n              <button name=\"category\" value={20} onClick={setData}>\n                Mythology\n              </button>\n            </li>\n          </ul>\n        </nav>\n      </div>\n      <div className=\"menu-container2\">\n        <button onClick={onClick} className=\"menu-trigger\">\n          <span>Difficulty</span>\n        </button>\n        <nav\n          ref={dropdownRef}\n          className={`menu ${isActive ? \"active\" : \"inactive\"}`}\n        >\n          <ul>\n            <li>\n              <button name=\"difficulty\" value={\"Easy\"} onClick={setDif}>\n                Easy\n              </button>\n            </li>\n            <li>\n              <button name=\"difficulty\" value={\"medium\"} onClick={setDif}>\n                Medium\n              </button>\n            </li>\n            <li>\n              <button name=\"difficulty\" value={\"Hard\"} onClick={setDif}>\n                Hard\n              </button>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  );\n};\n\nexport default Select;\n","/Users/josephdambra/Desktop/Coding/trivia/Group-Project/frontend/src/components/LoginReg.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":5,"column":12,"nodeType":"48","messageId":"49","endLine":5,"endColumn":17},{"ruleId":"50","severity":1,"message":"51","line":16,"column":8,"nodeType":"52","endLine":16,"endColumn":10,"suggestions":"53"},{"ruleId":"46","severity":1,"message":"54","line":2,"column":28,"nodeType":"48","messageId":"49","endLine":2,"endColumn":36},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'users' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["57"],"'setState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [fetchData]",{"range":"60","text":"61"},[343,345],"[fetchData]"]